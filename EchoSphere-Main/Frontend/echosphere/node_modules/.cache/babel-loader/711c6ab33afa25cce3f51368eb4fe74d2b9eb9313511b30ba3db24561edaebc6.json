{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { fetchDataFromAPI, postDataToAPI, putDataToAPI } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [session, setSession] = useState(null);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const s = sessionStorage.getItem('user_id');\n    console.log(s);\n    // Fetch data from the API\n    fetchDataFromAPI(\"/api/usession\").then(apiData => {\n      setSession(apiData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  console.log(session);\n\n  // if (!session) {\n  //   return <Navigate to=\"/login\" replace />;\n  // }\n\n  // Render the Dashboard component if user_id is available.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"JdvqgQ0EpFdT4kCi4bt+FWFuwu4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","fetchDataFromAPI","postDataToAPI","putDataToAPI","jsxDEV","_jsxDEV","Dashboard","_s","session","setSession","data","setData","s","sessionStorage","getItem","console","log","then","apiData","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { fetchDataFromAPI, postDataToAPI, putDataToAPI } from './apiService';\r\n\r\nconst Dashboard = () => {\r\n  const [session, setSession] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const s = sessionStorage.getItem('user_id');\r\n    console.log(s);\r\n    // Fetch data from the API\r\n    fetchDataFromAPI(\"/api/usession\")\r\n      .then(apiData => {\r\n        setSession(apiData);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n    }, []);\r\n\r\n    console.log(session);\r\n  \r\n  // if (!session) {\r\n  //   return <Navigate to=\"/login\" replace />;\r\n  // }\r\n\r\n  // Render the Dashboard component if user_id is available.\r\n  return (\r\n    <div>\r\n      {/* Your Dashboard content here */}\r\n      <h1>Welcome to the Dashboard</h1>\r\n      {/* Add your Dashboard content */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMa,CAAC,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;IACd;IACAX,gBAAgB,CAAC,eAAe,CAAC,CAC9BgB,IAAI,CAACC,OAAO,IAAI;MACfT,UAAU,CAACS,OAAO,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENL,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;;EAEtB;EACA;EACA;;EAEA;EACA,oBACEH,OAAA;IAAAgB,QAAA,eAEEhB,OAAA;MAAAgB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}