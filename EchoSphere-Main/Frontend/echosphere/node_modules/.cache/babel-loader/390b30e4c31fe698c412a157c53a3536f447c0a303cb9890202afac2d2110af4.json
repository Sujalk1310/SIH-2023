{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { fetchDataFromAPI } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    // Fetch data from the API\n    fetchDataFromAPI(\"http://127.0.0.1:8000/api/usession\").then(apiData => {\n      // Check the condition after receiving the response\n      if (apiData && apiData.message) {\n        setSession(apiData);\n      } else {\n        // Redirect to login page if the condition is not met\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }, this);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // Render the Dashboard component if user_id is available.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"my2JknXsLNPscnT9b+5uRmb6O9A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","fetchDataFromAPI","jsxDEV","_jsxDEV","Dashboard","_s","session","setSession","then","apiData","message","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","console","children","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { fetchDataFromAPI } from './apiService';\r\n\r\nconst Dashboard = () => {\r\n  const [session, setSession] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API\r\n    fetchDataFromAPI(\"http://127.0.0.1:8000/api/usession\")\r\n      .then(apiData => {\r\n        // Check the condition after receiving the response\r\n        if (apiData && apiData.message) {\r\n          setSession(apiData);\r\n        } else {\r\n          // Redirect to login page if the condition is not met\r\n          return <Navigate to=\"/login\" replace />;\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Render the Dashboard component if user_id is available.\r\n  return (\r\n    <div>\r\n      {/* Your Dashboard content here */}\r\n      <h1>Welcome to the Dashboard</h1>\r\n      {/* Add your Dashboard content */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAE,gBAAgB,CAAC,oCAAoC,CAAC,CACnDO,IAAI,CAACC,OAAO,IAAI;MACf;MACA,IAAIA,OAAO,IAAIA,OAAO,CAACC,OAAO,EAAE;QAC9BH,UAAU,CAACE,OAAO,CAAC;MACrB,CAAC,MAAM;QACL;QACA,oBAAON,OAAA,CAACH,QAAQ;UAACW,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzC;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEf,OAAA;IAAAiB,QAAA,eAEEjB,OAAA;MAAAiB,QAAA,EAAI;IAAwB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV,CAAC;AAACX,EAAA,CA5BID,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}