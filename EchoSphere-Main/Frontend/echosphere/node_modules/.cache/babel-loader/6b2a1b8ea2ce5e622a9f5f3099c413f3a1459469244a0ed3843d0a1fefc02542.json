{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard\\\\Components\\\\TextToSpeech.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextToSpeech() {\n  _s();\n  const [text, setText] = useState('Hello, world!'); // Default text\n  const [speaking, setSpeaking] = useState(false);\n  const speak = () => {\n    if (!speaking) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      window.speechSynthesis.speak(utterance);\n      setSpeaking(true);\n      utterance.onend = () => {\n        setSpeaking(false);\n      };\n    }\n  };\n  const stopSpeaking = () => {\n    if (speaking) {\n      window.speechSynthesis.cancel();\n      setSpeaking(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text-to-Speech Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: speak,\n      disabled: speaking,\n      children: \"Speak\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopSpeaking,\n      disabled: !speaking,\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TextToSpeech, \"5EM1qyG8fRHOenC1M5w7x+b8A0o=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextToSpeech","_s","text","setText","speaking","setSpeaking","speak","utterance","SpeechSynthesisUtterance","window","speechSynthesis","onend","stopSpeaking","cancel","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard/Components/TextToSpeech.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TextToSpeech() {\r\n  const [text, setText] = useState('Hello, world!'); // Default text\r\n  const [speaking, setSpeaking] = useState(false);\r\n\r\n  const speak = () => {\r\n    if (!speaking) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      window.speechSynthesis.speak(utterance);\r\n      setSpeaking(true);\r\n\r\n      utterance.onend = () => {\r\n        setSpeaking(false);\r\n      };\r\n    }\r\n  };\r\n\r\n  const stopSpeaking = () => {\r\n    if (speaking) {\r\n      window.speechSynthesis.cancel();\r\n      setSpeaking(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Text-to-Speech Demo</h1>\r\n      <textarea\r\n        rows=\"4\"\r\n        cols=\"50\"\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      <button onClick={speak} disabled={speaking}>\r\n        Speak\r\n      </button>\r\n      <button onClick={stopSpeaking} disabled={!speaking}>\r\n        Stop\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextToSpeech;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;EACnD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAI,CAACF,QAAQ,EAAE;MACb,MAAMG,SAAS,GAAG,IAAIC,wBAAwB,CAACN,IAAI,CAAC;MACpDO,MAAM,CAACC,eAAe,CAACJ,KAAK,CAACC,SAAS,CAAC;MACvCF,WAAW,CAAC,IAAI,CAAC;MAEjBE,SAAS,CAACI,KAAK,GAAG,MAAM;QACtBN,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC;IACH;EACF,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIR,QAAQ,EAAE;MACZK,MAAM,CAACC,eAAe,CAACG,MAAM,CAAC,CAAC;MAC/BR,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MACEoB,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,IAAI;MACTC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFnB,OAAA;MAAQ0B,OAAO,EAAEnB,KAAM;MAACoB,QAAQ,EAAEtB,QAAS;MAAAU,QAAA,EAAC;IAE5C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAQ0B,OAAO,EAAEb,YAAa;MAACc,QAAQ,EAAE,CAACtB,QAAS;MAAAU,QAAA,EAAC;IAEpD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CAxCQD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}