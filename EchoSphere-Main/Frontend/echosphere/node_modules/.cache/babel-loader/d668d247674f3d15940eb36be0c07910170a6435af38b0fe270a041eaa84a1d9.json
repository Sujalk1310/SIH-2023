{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { fetchDataFromAPI, postDataToAPI, putDataToAPI } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [id, setId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const lid = localStorage.getItem('user_id');\n    if (lid && typeof lid === 'number') {\n      setId(lid);\n    }\n    setLoading(false); // Set loading to false once the check is done\n  }, []);\n\n  // If loading is true, display a loading message\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the Dashboard component if user_id is available.\n  if (id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    // Redirect to the login page if user_id is not available\n  }\n};\n_s(Dashboard, \"UNpfCqIZ5aLf8vnnzT1eq3ztBig=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","fetchDataFromAPI","postDataToAPI","putDataToAPI","jsxDEV","_jsxDEV","Dashboard","_s","id","setId","loading","setLoading","lid","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { fetchDataFromAPI, postDataToAPI, putDataToAPI } from './apiService';\r\n\r\nconst Dashboard = () => {\r\n  const [id, setId] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const lid = localStorage.getItem('user_id');\r\n    if (lid && typeof lid === 'number') {\r\n      setId(lid);\r\n    }\r\n    setLoading(false); // Set loading to false once the check is done\r\n  }, []);\r\n\r\n  // If loading is true, display a loading message\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  // Render the Dashboard component if user_id is available.\r\n  if (id) {\r\n    return (\r\n      <div>\r\n        {/* Your Dashboard content here */}\r\n        <h1>Welcome to the Dashboard</h1>\r\n        {/* Add your Dashboard content */}\r\n      </div>\r\n    );\r\n  } else {\r\n    // Redirect to the login page if user_id is not available\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAClC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC3C,IAAIF,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAClCH,KAAK,CAACG,GAAG,CAAC;IACZ;IACAD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAU,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;;EAEA;EACA,IAAIX,EAAE,EAAE;IACN,oBACEH,OAAA;MAAAU,QAAA,eAEEV,OAAA;QAAAU,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CAAC;EAEV,CAAC,MAAM;IACL;EAAA;AAEJ,CAAC;AAACZ,EAAA,CA7BID,SAAS;AAAAc,EAAA,GAATd,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}