{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { Route, useNavigate } from 'react-router-dom';\nconst PrivateRoute = ({\n  element: Element,\n  ...rest\n}) => {\n  _s();\n  const user_id = sessionStorage.getItem('user_id');\n  const worker_id = sessionStorage.getItem('worker_id');\n  const navigate = useNavigate();\n\n  // Determine the destination route based on user_id and worker_id.\n  let destinationRoute = '/login'; // Default to login route\n\n  if (user_id) {\n    destinationRoute = '/dashboard';\n  } else if (worker_id) {\n    destinationRoute = '/worker';\n  }\n\n  // Redirect to the determined route.\n  navigate(destinationRoute, {\n    replace: true\n  });\n\n  // Return null for the route component.\n  return null;\n};\n_s(PrivateRoute, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","useNavigate","PrivateRoute","element","Element","rest","_s","user_id","sessionStorage","getItem","worker_id","navigate","destinationRoute","replace","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Route, useNavigate } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ element: Element, ...rest }) => {\r\n  const user_id = sessionStorage.getItem('user_id');\r\n  const worker_id = sessionStorage.getItem('worker_id');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Determine the destination route based on user_id and worker_id.\r\n  let destinationRoute = '/login'; // Default to login route\r\n\r\n  if (user_id) {\r\n    destinationRoute = '/dashboard';\r\n  } else if (worker_id) {\r\n    destinationRoute = '/worker';\r\n  }\r\n\r\n  // Redirect to the determined route.\r\n  navigate(destinationRoute, { replace: true });\r\n\r\n  // Return null for the route component.\r\n  return null;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,OAAO;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAMC,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;EACjD,MAAMC,SAAS,GAAGF,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;EAErD,MAAME,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIW,gBAAgB,GAAG,QAAQ,CAAC,CAAC;;EAEjC,IAAIL,OAAO,EAAE;IACXK,gBAAgB,GAAG,YAAY;EACjC,CAAC,MAAM,IAAIF,SAAS,EAAE;IACpBE,gBAAgB,GAAG,SAAS;EAC9B;;EAEA;EACAD,QAAQ,CAACC,gBAAgB,EAAE;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC;;EAE7C;EACA,OAAO,IAAI;AACb,CAAC;AAACP,EAAA,CApBIJ,YAAY;EAAA,QAICD,WAAW;AAAA;AAAAa,EAAA,GAJxBZ,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}