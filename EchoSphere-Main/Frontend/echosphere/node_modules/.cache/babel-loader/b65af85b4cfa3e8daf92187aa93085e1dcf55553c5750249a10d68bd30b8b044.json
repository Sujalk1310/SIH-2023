{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\GoogleTranslate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleTranslate = ({\n  lang\n}) => {\n  function waitForElementToExist(selector) {\n    return new Promise(resolve => {\n      if (document.querySelector(selector)) {\n        return resolve(document.querySelector(selector));\n      }\n      const observer = new MutationObserver(() => {\n        if (document.querySelector(selector)) {\n          resolve(document.querySelector(selector));\n          observer.disconnect();\n        }\n      });\n      observer.observe(document.body, {\n        subtree: true,\n        childList: true\n      });\n    });\n  }\n  function googleTranslateElementInit() {\n    window.google.translate.TranslateElement({\n      pageLanguage: lang // Set the default language to English\n    }, 'google_translate_element');\n  }\n  waitForElementToExist('#google_translate_element').then(element => {\n    setTimeout(() => {\n      var select = document.querySelector(\".goog-te-combo\");\n      select.value = lang;\n      select.dispatchEvent(new Event(\"change\")); // Trigger the change event\n    }, 2000);\n  });\n  window.onload = function () {\n    googleTranslateElementInit(lang);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"google_translate_element\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_c = GoogleTranslate;\nexport default GoogleTranslate;\nvar _c;\n$RefreshReg$(_c, \"GoogleTranslate\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GoogleTranslate","lang","waitForElementToExist","selector","Promise","resolve","document","querySelector","observer","MutationObserver","disconnect","observe","body","subtree","childList","googleTranslateElementInit","window","google","translate","TranslateElement","pageLanguage","then","element","setTimeout","select","value","dispatchEvent","Event","onload","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/GoogleTranslate.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst GoogleTranslate = ({ lang }) => {\r\n    function waitForElementToExist(selector) {\r\n      return new Promise(resolve => {\r\n        if (document.querySelector(selector)) {\r\n          return resolve(document.querySelector(selector));\r\n        }\r\n\r\n        const observer = new MutationObserver(() => {\r\n          if (document.querySelector(selector)) {\r\n            resolve(document.querySelector(selector));\r\n            observer.disconnect();\r\n          }\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n          subtree: true,\r\n          childList: true,\r\n        });\r\n      });\r\n    }\r\n\r\n    function googleTranslateElementInit() {\r\n      window.google.translate.TranslateElement(\r\n        {\r\n          pageLanguage: lang, // Set the default language to English\r\n        },\r\n        'google_translate_element'\r\n      );\r\n    }\r\n\r\n    waitForElementToExist('#google_translate_element').then(element => {\r\n        setTimeout(() => {\r\n          var select = document.querySelector(\".goog-te-combo\");\r\n          select.value = lang;\r\n          select.dispatchEvent(new Event(\"change\")); // Trigger the change event\r\n        }, 2000);\r\n    });\r\n\r\n    window.onload = function () {\r\n      googleTranslateElementInit(lang);\r\n    };\r\n\r\n  return <div id=\"google_translate_element\"></div>;\r\n\r\n};\r\n\r\nexport default GoogleTranslate;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAClC,SAASC,qBAAqBA,CAACC,QAAQ,EAAE;IACvC,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;MAC5B,IAAIC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,EAAE;QACpC,OAAOE,OAAO,CAACC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC;MAClD;MAEA,MAAMK,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,MAAM;QAC1C,IAAIH,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,EAAE;UACpCE,OAAO,CAACC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC;UACzCK,QAAQ,CAACE,UAAU,CAAC,CAAC;QACvB;MACF,CAAC,CAAC;MAEFF,QAAQ,CAACG,OAAO,CAACL,QAAQ,CAACM,IAAI,EAAE;QAC9BC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,SAASC,0BAA0BA,CAAA,EAAG;IACpCC,MAAM,CAACC,MAAM,CAACC,SAAS,CAACC,gBAAgB,CACtC;MACEC,YAAY,EAAEnB,IAAI,CAAE;IACtB,CAAC,EACD,0BACF,CAAC;EACH;EAEAC,qBAAqB,CAAC,2BAA2B,CAAC,CAACmB,IAAI,CAACC,OAAO,IAAI;IAC/DC,UAAU,CAAC,MAAM;MACf,IAAIC,MAAM,GAAGlB,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;MACrDiB,MAAM,CAACC,KAAK,GAAGxB,IAAI;MACnBuB,MAAM,CAACE,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,CAAC;EAEFX,MAAM,CAACY,MAAM,GAAG,YAAY;IAC1Bb,0BAA0B,CAACd,IAAI,CAAC;EAClC,CAAC;EAEH,oBAAOF,OAAA;IAAK8B,EAAE,EAAC;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAElD,CAAC;AAACC,EAAA,GA5CIlC,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}