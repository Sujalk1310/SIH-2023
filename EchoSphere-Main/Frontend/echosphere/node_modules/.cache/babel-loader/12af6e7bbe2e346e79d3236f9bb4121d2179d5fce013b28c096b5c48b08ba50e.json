{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\GoogleTranslate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleTranslate = () => {\n  _s();\n  useEffect(() => {\n    function waitForElementToExist(selector) {\n      return new Promise(resolve => {\n        if (document.querySelector(selector)) {\n          return resolve(document.querySelector(selector));\n        }\n        const observer = new MutationObserver(() => {\n          if (document.querySelector(selector)) {\n            resolve(document.querySelector(selector));\n            observer.disconnect();\n          }\n        });\n        observer.observe(document.body, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"google_translate_element\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleTranslate, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GoogleTranslate;\nexport default GoogleTranslate;\nvar _c;\n$RefreshReg$(_c, \"GoogleTranslate\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","GoogleTranslate","_s","waitForElementToExist","selector","Promise","resolve","document","querySelector","observer","MutationObserver","disconnect","observe","body","subtree","childList","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/GoogleTranslate.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nconst GoogleTranslate = () => {\r\n  useEffect(() => {\r\n    function waitForElementToExist(selector) {\r\n        return new Promise(resolve => {\r\n            if (document.querySelector(selector)) {\r\n                return resolve(document.querySelector(selector));\r\n            }\r\n\r\n            const observer = new MutationObserver(() => {\r\n                if (document.querySelector(selector)) {\r\n                    resolve(document.querySelector(selector));\r\n                    observer.disconnect();\r\n                }\r\n            });\r\n\r\n            observer.observe(document.body, {\r\n                subtree: true,\r\n                childList: true,\r\n            });\r\n        });\r\n    }\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"google_translate_element\"></div>\r\n  );\r\n};\r\n\r\nexport default GoogleTranslate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5BJ,SAAS,CAAC,MAAM;IACd,SAASK,qBAAqBA,CAACC,QAAQ,EAAE;MACrC,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAI;QAC1B,IAAIC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,EAAE;UAClC,OAAOE,OAAO,CAACC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC;QACpD;QAEA,MAAMK,QAAQ,GAAG,IAAIC,gBAAgB,CAAC,MAAM;UACxC,IAAIH,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,EAAE;YAClCE,OAAO,CAACC,QAAQ,CAACC,aAAa,CAACJ,QAAQ,CAAC,CAAC;YACzCK,QAAQ,CAACE,UAAU,CAAC,CAAC;UACzB;QACJ,CAAC,CAAC;QAEFF,QAAQ,CAACG,OAAO,CAACL,QAAQ,CAACM,IAAI,EAAE;UAC5BC,OAAO,EAAE,IAAI;UACbC,SAAS,EAAE;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EAEF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKgB,EAAE,EAAC;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE7C,CAAC;AAAClB,EAAA,CA3BID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}