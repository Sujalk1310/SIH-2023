{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { fetchDataFromAPI } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [apiKey, setApiKey] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Fetch data from the API\n    fetchDataFromAPI(\"http://127.0.0.1:8000/api/usession\").then(apiData => {\n      alert(apiData);\n      if (apiData && apiData.message === true) {\n        setApiKey(apiData);\n      } else {\n        // setApiKey(false);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setApiKey(false);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check for apiKey.message after isLoading is false\n  if (apiKey && apiKey.message === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } else if (apiKey === false) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle other conditions or errors\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An unexpected error occurred.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n_s(Dashboard, \"Le3V4szTc8/qRJrp6oHP8YRgb8w=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","fetchDataFromAPI","jsxDEV","_jsxDEV","Dashboard","_s","apiKey","setApiKey","isLoading","setIsLoading","then","apiData","alert","message","catch","error","console","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { fetchDataFromAPI } from './apiService';\r\n\r\nconst Dashboard = () => {\r\n  const [apiKey, setApiKey] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API\r\n    fetchDataFromAPI(\"http://127.0.0.1:8000/api/usession\")\r\n      .then(apiData => {\r\n        alert(apiData)\r\n        if (apiData && apiData.message === true) {\r\n          setApiKey(apiData);\r\n        } else {\r\n          // setApiKey(false);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n        setApiKey(false);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Check for apiKey.message after isLoading is false\r\n  if (apiKey && apiKey.message === true) {\r\n    return (\r\n      <div>\r\n        {/* Your Dashboard content here */}\r\n        <h1>Welcome to the Dashboard</h1>\r\n        {/* Add your Dashboard content */}\r\n      </div>\r\n    );\r\n  } else if (apiKey === false) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Handle other conditions or errors\r\n  return <div>An unexpected error occurred.</div>;\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAE,gBAAgB,CAAC,oCAAoC,CAAC,CACnDS,IAAI,CAACC,OAAO,IAAI;MACfC,KAAK,CAACD,OAAO,CAAC;MACd,IAAIA,OAAO,IAAIA,OAAO,CAACE,OAAO,KAAK,IAAI,EAAE;QACvCN,SAAS,CAACI,OAAO,CAAC;MACpB,CAAC,MAAM;QACL;MAAA;IAEJ,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CR,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACDU,OAAO,CAAC,MAAM;MACbR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAIhB,MAAM,IAAIA,MAAM,CAACO,OAAO,KAAK,IAAI,EAAE;IACrC,oBACEV,OAAA;MAAAe,QAAA,eAEEf,OAAA;QAAAe,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE9B,CAAC;EAEV,CAAC,MAAM,IAAIhB,MAAM,KAAK,KAAK,EAAE;IAC3B,oBAAOH,OAAA,CAACH,QAAQ;MAACuB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,oBAAOnB,OAAA;IAAAe,QAAA,EAAK;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACjD,CAAC;AAACjB,EAAA,CA3CID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}