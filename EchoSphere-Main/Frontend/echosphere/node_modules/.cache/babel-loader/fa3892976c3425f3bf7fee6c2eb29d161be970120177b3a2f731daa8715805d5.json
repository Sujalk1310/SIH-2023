{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { fetchDataFromAPI, postDataToAPI, putDataToAPI } from './apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Fetch data from the API\n    fetchDataFromAPI().then(apiData => {\n      setData(apiData);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n\n    // Example POST request\n    const postData = {\n      key: 'value'\n    };\n    postDataToAPI(postData).then(response => {\n      console.log('POST response:', response);\n    }).catch(error => {\n      console.error('Error making POST request:', error);\n    });\n\n    // Example PUT request\n    const putData = {\n      key: 'updatedValue'\n    };\n    putDataToAPI(putData).then(response => {\n      console.log('PUT response:', response);\n    }).catch(error => {\n      console.error('Error making PUT request:', error);\n    });\n  }, []);\n  if (!user_id) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the Dashboard component if user_id is available.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","fetchDataFromAPI","postDataToAPI","putDataToAPI","jsxDEV","_jsxDEV","Dashboard","_s","data","setData","then","apiData","catch","error","console","postData","key","response","log","putData","user_id","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { fetchDataFromAPI, postDataToAPI, putDataToAPI } from './apiService';\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API\r\n    fetchDataFromAPI()\r\n      .then(apiData => {\r\n        setData(apiData);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n\r\n    // Example POST request\r\n    const postData = { key: 'value' };\r\n    postDataToAPI(postData)\r\n      .then(response => {\r\n        console.log('POST response:', response);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error making POST request:', error);\r\n      });\r\n\r\n    // Example PUT request\r\n    const putData = { key: 'updatedValue' };\r\n    putDataToAPI(putData)\r\n      .then(response => {\r\n        console.log('PUT response:', response);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error making PUT request:', error);\r\n      });\r\n  }, []);\r\n\r\n  if (!user_id) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Render the Dashboard component if user_id is available.\r\n  return (\r\n    <div>\r\n      {/* Your Dashboard content here */}\r\n      <h1>Welcome to the Dashboard</h1>\r\n      {/* Add your Dashboard content */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,EAAEC,aAAa,EAAEC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAE,gBAAgB,CAAC,CAAC,CACfS,IAAI,CAACC,OAAO,IAAI;MACfF,OAAO,CAACE,OAAO,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;;IAEJ;IACA,MAAME,QAAQ,GAAG;MAAEC,GAAG,EAAE;IAAQ,CAAC;IACjCd,aAAa,CAACa,QAAQ,CAAC,CACpBL,IAAI,CAACO,QAAQ,IAAI;MAChBH,OAAO,CAACI,GAAG,CAAC,gBAAgB,EAAED,QAAQ,CAAC;IACzC,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;;IAEJ;IACA,MAAMM,OAAO,GAAG;MAAEH,GAAG,EAAE;IAAe,CAAC;IACvCb,YAAY,CAACgB,OAAO,CAAC,CAClBT,IAAI,CAACO,QAAQ,IAAI;MAChBH,OAAO,CAACI,GAAG,CAAC,eAAe,EAAED,QAAQ,CAAC;IACxC,CAAC,CAAC,CACDL,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACO,OAAO,EAAE;IACZ,oBAAOf,OAAA,CAACL,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,oBACErB,OAAA;IAAAsB,QAAA,eAEEtB,OAAA;MAAAsB,QAAA,EAAI;IAAwB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV,CAAC;AAACnB,EAAA,CA9CID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}