{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard\\\\Components\\\\TextToSpeech.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextToSpeech({\n  content\n}) {\n  _s();\n  const [speaking, setSpeaking] = useState(false);\n  const [voices, setVoices] = useState([]);\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  useEffect(() => {\n    // Fetch available voices when the component mounts\n    const availableVoices = window.speechSynthesis.getVoices();\n    setVoices(availableVoices);\n    setSelectedVoice(availableVoices[0]); // Set the first voice as the default\n  }, []);\n  const speak = () => {\n    if (!speaking) {\n      if (selectedVoice) {\n        const utterance = new SpeechSynthesisUtterance(content);\n        utterance.voice = selectedVoice;\n        window.speechSynthesis.speak(utterance);\n        setSpeaking(true);\n        utterance.onend = () => {\n          setSpeaking(false);\n        };\n      } else {\n        alert('Please select a voice.');\n      }\n    }\n  };\n  const stopSpeaking = () => {\n    if (speaking) {\n      window.speechSynthesis.cancel();\n      setSpeaking(false);\n    }\n  };\n  const handleVoiceChange = event => {\n    const selectedVoiceName = event.target.value;\n    const voice = voices.find(v => v.name === selectedVoiceName);\n    setSelectedVoice(voice);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-absolute mr-\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleVoiceChange,\n        children: voices.map(voice => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: voice.name,\n          children: voice.name\n        }, voice.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-50\",\n        onClick: speak,\n        disabled: speaking,\n        children: \"Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-50\",\n        onClick: stopSpeaking,\n        disabled: !speaking,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TextToSpeech, \"qa5kdr2Jr0ZXPAXbJ/6TwMF5rYU=\");\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextToSpeech","content","_s","speaking","setSpeaking","voices","setVoices","selectedVoice","setSelectedVoice","availableVoices","window","speechSynthesis","getVoices","speak","utterance","SpeechSynthesisUtterance","voice","onend","alert","stopSpeaking","cancel","handleVoiceChange","event","selectedVoiceName","target","value","find","v","name","className","children","onChange","map","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard/Components/TextToSpeech.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TextToSpeech({ content }) {\r\n  const [speaking, setSpeaking] = useState(false);\r\n  const [voices, setVoices] = useState([]);\r\n  const [selectedVoice, setSelectedVoice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch available voices when the component mounts\r\n    const availableVoices = window.speechSynthesis.getVoices();\r\n    setVoices(availableVoices);\r\n    setSelectedVoice(availableVoices[0]); // Set the first voice as the default\r\n  }, []);\r\n\r\n  const speak = () => {\r\n    if (!speaking) {\r\n      if (selectedVoice) {\r\n        const utterance = new SpeechSynthesisUtterance(content);\r\n        utterance.voice = selectedVoice;\r\n        window.speechSynthesis.speak(utterance);\r\n        setSpeaking(true);\r\n\r\n        utterance.onend = () => {\r\n          setSpeaking(false);\r\n        };\r\n      } else {\r\n        alert('Please select a voice.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopSpeaking = () => {\r\n    if (speaking) {\r\n      window.speechSynthesis.cancel();\r\n      setSpeaking(false);\r\n    }\r\n  };\r\n\r\n  const handleVoiceChange = (event) => {\r\n    const selectedVoiceName = event.target.value;\r\n    const voice = voices.find((v) => v.name === selectedVoiceName);\r\n    setSelectedVoice(voice);\r\n  };\r\n\r\n  return (\r\n    <div className='position-absolute mr-'>\r\n      <div>\r\n        <select onChange={handleVoiceChange}>\r\n          {voices.map((voice) => (\r\n            <option key={voice.name} value={voice.name}>\r\n              {voice.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className='d-flex'>\r\n        <button className=\"w-50\" onClick={speak} disabled={speaking}>\r\n          Speak\r\n        </button>\r\n        <button className=\"w-50\" onClick={stopSpeaking} disabled={!speaking}>\r\n          Stop\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextToSpeech;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}