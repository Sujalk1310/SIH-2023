{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\Dashboard\\\\Components\\\\Status.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport StatusTracks from './StatusTracks';\nimport { fetchDataFromAPI } from '../../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const [jsonData, setJsonData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  _;\n  const [activeCount, setActiveCount] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [completedCount, setCompletedCount] = useState(0);\n  const id = localStorage.getItem('user_id');\n  const url = `grievances/u${id}`;\n  const name = `User ${id}`;\n  useEffect(() => {\n    fetchDataFromAPI(url).then(json => {\n      // Handle the response data\n      console.log('Data fetched:', json.message);\n      setJsonData(json.message);\n\n      // Count \"completed,\" \"active,\" and total counts here\n      let ccount = 0;\n      let acount = 0;\n      json.message.forEach(jsonObj => {\n        if (jsonObj.status === \"Completed\") {\n          ccount++;\n        } else if (jsonObj.status === \"Active\") {\n          acount++;\n        }\n      });\n      setActiveCount(acount);\n      setCompletedCount(ccount);\n      setTotalCount(json.message.length);\n\n      // Set loading to false when data is loaded\n      setLoading(false);\n    }).catch(error => {\n      // Handle any errors\n      console.error('Error fetching data:', error);\n      // Set loading to false in case of an error\n      setLoading(false);\n    });\n  }, [url]);\n  const c1 = activeCount;\n  const c2 = completedCount;\n  const c3 = totalCount;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        user: name,\n        filter: \"adm\",\n        but: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatusTracks, {\n        jsonData: jsonData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      c1: c1,\n      c2: c2,\n      c3: c3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Status, \"HTsEKHKysa42p2yftJAgZRgfkkc=\");\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useEffect","useState","Link","StatusTracks","fetchDataFromAPI","jsxDEV","_jsxDEV","Status","_s","jsonData","setJsonData","loading","setLoading","_","activeCount","setActiveCount","totalCount","setTotalCount","completedCount","setCompletedCount","id","localStorage","getItem","url","name","then","json","console","log","message","ccount","acount","forEach","jsonObj","status","length","catch","error","c1","c2","c3","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","user","filter","but","Footer","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/Dashboard/Components/Status.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StatusTracks from './StatusTracks';\r\nimport { fetchDataFromAPI } from '../../apiService';\r\n\r\nconst Status = () => {\r\n    const [jsonData, setJsonData] = useState(null);\r\n    const [loading, setLoading] = useState(true);_\r\n    const [activeCount, setActiveCount] = useState(0);\r\n    const [totalCount, setTotalCount] = useState(0);\r\n    const [completedCount, setCompletedCount] = useState(0);\r\n    const id = localStorage.getItem('user_id');\r\n    const url = `grievances/u${id}`;\r\n    const name = `User ${id}`;\r\n  \r\n  useEffect(() => {\r\n    fetchDataFromAPI(url)\r\n      .then(json => {\r\n        // Handle the response data\r\n        console.log('Data fetched:', json.message);\r\n        setJsonData(json.message);\r\n\r\n        // Count \"completed,\" \"active,\" and total counts here\r\n        let ccount = 0;\r\n        let acount = 0;\r\n        json.message.forEach(jsonObj => {\r\n          if (jsonObj.status === \"Completed\") {\r\n            ccount++;\r\n          } else if (jsonObj.status === \"Active\") {\r\n            acount++;\r\n          }\r\n        });\r\n        setActiveCount(acount);\r\n        setCompletedCount(ccount);\r\n        setTotalCount(json.message.length);\r\n\r\n        // Set loading to false when data is loaded\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        // Handle any errors\r\n        console.error('Error fetching data:', error);\r\n        // Set loading to false in case of an error\r\n        setLoading(false);\r\n      });\r\n  }, [url]);\r\n\r\n    const c1 = activeCount;\r\n    const c2 = completedCount;\r\n    const c3 = totalCount;\r\n\r\n    return (\r\n        <div className=\"App\">\r\n        <Header />\r\n        <div>\r\n        <Link user={name} filter=\"adm\" but=\"status\"/>\r\n            <StatusTracks jsonData={jsonData} />\r\n        </div>\r\n        <Footer c1={c1} c2={c2} c3={c3} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}