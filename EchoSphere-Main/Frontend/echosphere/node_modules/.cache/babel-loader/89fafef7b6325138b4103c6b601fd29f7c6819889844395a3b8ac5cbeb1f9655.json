{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\EchoSphere-Main\\\\Frontend\\\\echosphere\\\\src\\\\Components\\\\PrivateRoute.js\";\n// PrivateRoute.js\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// Check if the user is authenticated based on user_id and worker_id.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  const user_id = sessionStorage.getItem('user_id');\n  const worker_id = sessionStorage.getItem('worker_id');\n  return !!user_id || !!worker_id;\n};\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  ...rest,\n  render: props => {\n    if (isAuthenticated()) {\n      // If user_id is present, redirect to the dashboard.\n      if (sessionStorage.getItem('user_id')) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 18\n        }, this);\n      }\n      // If worker_id is present, redirect to the worker component.\n      if (sessionStorage.getItem('worker_id')) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/worker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }, this);\n      }\n    } else {\n      // If neither user_id nor worker_id is present, redirect to login.\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this);\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","isAuthenticated","user_id","sessionStorage","getItem","worker_id","PrivateRoute","component","Component","rest","render","props","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/PrivateRoute.js"],"sourcesContent":["// PrivateRoute.js\r\nimport React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// Check if the user is authenticated based on user_id and worker_id.\r\nconst isAuthenticated = () => {\r\n  const user_id = sessionStorage.getItem('user_id');\r\n  const worker_id = sessionStorage.getItem('worker_id');\r\n  return !!user_id || !!worker_id;\r\n};\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (isAuthenticated()) {\r\n        // If user_id is present, redirect to the dashboard.\r\n        if (sessionStorage.getItem('user_id')) {\r\n          return <Redirect to=\"/dashboard\" />;\r\n        }\r\n        // If worker_id is present, redirect to the worker component.\r\n        if (sessionStorage.getItem('worker_id')) {\r\n          return <Redirect to=\"/worker\" />;\r\n        }\r\n      } else {\r\n        // If neither user_id nor worker_id is present, redirect to login.\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC;EACjD,MAAMC,SAAS,GAAGF,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC;EACrD,OAAO,CAAC,CAACF,OAAO,IAAI,CAAC,CAACG,SAAS;AACjC,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,kBACrDT,OAAA,CAACH,KAAK;EAAA,GACAY,IAAI;EACRC,MAAM,EAAGC,KAAK,IAAK;IACjB,IAAIV,eAAe,CAAC,CAAC,EAAE;MACrB;MACA,IAAIE,cAAc,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;QACrC,oBAAOJ,OAAA,CAACF,QAAQ;UAACc,EAAE,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrC;MACA;MACA,IAAIb,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;QACvC,oBAAOJ,OAAA,CAACF,QAAQ;UAACc,EAAE,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAClC;IACF,CAAC,MAAM;MACL;MACA,oBAAOhB,OAAA,CAACF,QAAQ;QAACc,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjC;EACF;AAAE;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACF;AAACC,EAAA,GAnBIX,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}