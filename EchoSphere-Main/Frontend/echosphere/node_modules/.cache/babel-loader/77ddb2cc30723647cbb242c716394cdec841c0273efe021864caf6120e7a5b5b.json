{"ast":null,"code":"// apiService.js\nimport axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8000/api/' // Replace with your API server URL\n});\n\n// Function to make a GET request\nfunction fetchDataFromAPI(url_endpoint) {\n  return axiosInstance.get(url_endpoint).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n}\n\n// Function to make a POST request\nfunction postDataToAPI(url_endpoint, data) {\n  return axiosInstance.post(url_endpoint, data).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n}\n\n// Function to make a PUT request\nfunction putDataToAPI(url_endpoint, data) {\n  return axiosInstance.put(url_endpoint, data).then(response => {\n    return response.data;\n  }).catch(error => {\n    throw error;\n  });\n}\nexport { fetchDataFromAPI, postDataToAPI, putDataToAPI };","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","fetchDataFromAPI","url_endpoint","get","then","response","data","catch","error","postDataToAPI","post","putDataToAPI","put"],"sources":["D:/Project/EchoSphere-Main/Frontend/echosphere/src/Components/apiService.js"],"sourcesContent":["// apiService.js\r\nimport axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:8000/api/', // Replace with your API server URL\r\n});\r\n\r\n\r\n// Function to make a GET request\r\nfunction fetchDataFromAPI(url_endpoint) {\r\n  return axiosInstance.get(url_endpoint)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\n// Function to make a POST request\r\nfunction postDataToAPI(url_endpoint, data) {\r\n  return axiosInstance.post(url_endpoint, data)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\n// Function to make a PUT request\r\nfunction putDataToAPI(url_endpoint, data) {\r\n  return axiosInstance.put(url_endpoint, data)\r\n    .then(response => {\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n\r\nexport { fetchDataFromAPI, postDataToAPI, putDataToAPI };\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,4BAA4B,CAAE;AACzC,CAAC,CAAC;;AAGF;AACA,SAASC,gBAAgBA,CAACC,YAAY,EAAE;EACtC,OAAOJ,aAAa,CAACK,GAAG,CAACD,YAAY,CAAC,CACnCE,IAAI,CAACC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACd,MAAMA,KAAK;EACb,CAAC,CAAC;AACN;;AAEA;AACA,SAASC,aAAaA,CAACP,YAAY,EAAEI,IAAI,EAAE;EACzC,OAAOR,aAAa,CAACY,IAAI,CAACR,YAAY,EAAEI,IAAI,CAAC,CAC1CF,IAAI,CAACC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACd,MAAMA,KAAK;EACb,CAAC,CAAC;AACN;;AAEA;AACA,SAASG,YAAYA,CAACT,YAAY,EAAEI,IAAI,EAAE;EACxC,OAAOR,aAAa,CAACc,GAAG,CAACV,YAAY,EAAEI,IAAI,CAAC,CACzCF,IAAI,CAACC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACd,MAAMA,KAAK;EACb,CAAC,CAAC;AACN;AAEA,SAASP,gBAAgB,EAAEQ,aAAa,EAAEE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}